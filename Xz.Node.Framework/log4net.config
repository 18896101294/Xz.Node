<?xml version="1.0" encoding="utf-8"?>
<!--log4配置文件，需拷贝到项目的根节点，这里为了方便还是放到了Xz.Node.Framework下-->
<!--需指定文本格式为 utf-8 否则可能会出现乱码的情况-->
<log4net>
  <appender name="RollingLogFileAppender" type="log4net.Appender.RollingFileAppender">
    <param name="Encoding" value="utf-8" />
    <!--定义文件存放位置-->
    <file value="log/" />
    <appendToFile value="true" />
    <!--日期的格式，每天换一个文件记录，如不设置则永远只记录一天的日志，需设置-->
    <rollingStyle value="Date" />
    <datePattern value="yyyyMMdd'.txt'" />
    <!--多线程时采用最小锁定-->
    <!--<lockingModel type="log4net.Appender.FileAppender+MinimalLock" />-->
    <!--日志文件名是否为静态-->
    <staticLogFileName value="false" />
    <!--日志保留天数-->
    <param name="MaxSizeRollBackups" value="10" />
    <!--每个文件最大1M-->
    <!--<param name="maximumFileSize" value="1MB" />-->
    
    <!--布局（向用户显示最后经过格式化的输出信息）-->
    <layout type="log4net.Layout.PatternLayout">
      <conversionPattern value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline" />
    </layout>
  </appender>

  <appender name="ConsoleAppender" type="log4net.Appender.ConsoleAppender">
    <layout type="log4net.Layout.PatternLayout" value="%date [%thread] %-5level %logger - %message%newline" />
  </appender>
  <root>
    <!-- 控制级别，由低到高：ALL|DEBUG|INFO|WARN|ERROR|FATAL|OFF -->
    <!-- 比如定义级别为INFO，则INFO级别向下的级别，比如DEBUG日志将不会被记录 -->
    <!-- 如果没有定义LEVEL的值，则缺省为DEBUG -->
    <level value="INFO" />
    <appender-ref ref="ConsoleAppender" />
    <!--文件形式记录日志-->
    <appender-ref ref="RollingLogFileAppender" />
  </root>
</log4net>